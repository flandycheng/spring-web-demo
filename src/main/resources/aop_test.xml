<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                                              http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
                                                http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
                                              http://www.springframework.org/schema/context
                                              http://www.springframework.org/schema/context/spring-context-2.5.xsd">
    <aop:config>
        <aop:aspect id="testInterceptor1" ref="testInterceptor">
            <aop:pointcut expression="execution(public * com.fucheng.controller.*.*(..))"
                          id="testPointCut"/>
            <aop:after method="after" pointcut-ref="testPointCut"/>
            <aop:before method="before" pointcut-ref="testPointCut"/>
        </aop:aspect>
        <aop:aspect id="testInterceptor2" ref="testInterceptor">
            <aop:pointcut expression="execution(public * com.fucheng.service.*.*(..))"
                          id="testPointCutInService"/>
            <aop:after method="after" pointcut-ref="testPointCutInService"/>
            <aop:before method="before" pointcut-ref="testPointCutInService"/>
        </aop:aspect>

        <!-- 定义切面 引用通知的bean -->
        <aop:aspect id="testAspect1" ref="demoAdvice">
            <!-- 设置切入点 -->
            <aop:pointcut id="pointcut1" expression="execution(* com.fucheng.service.*.*(..))"/>
            <!--指定before通知方法为,myAdvice.beforeShow()，引用切入点pointcut1 -->
            <aop:before method="beforeShow" pointcut-ref="pointcut1"/>
            <!--指定after通知方法为,myAdvice.afterShow()，引用切入点pointcut1 -->
            <aop:after method="afterShow" pointcut-ref="pointcut1"/>
            <!--指定afterReturn通知方法为,myAdvice.afterReturnShow()，引用切入点pointcut1 -->
            <aop:after-returning method="afterReturnShow" pointcut-ref="pointcut1"/>
            <!--指定afterThrowing通知方法为,myAdvice.afterThrowingShow()，引用切入点pointcut1 -->
            <aop:after-throwing method="afterThrowingShow" pointcut-ref="pointcut1"/>
            <!--指定around通知方法为,myAdvice.aroundShow()，引用切入点pointcut1 -->
            <aop:around method="aroundShow" pointcut-ref="pointcut1"/>
        </aop:aspect>
    </aop:config>



    <!--  手工添加 interceptor -->
    <bean id="testInterceptor" class="com.fucheng.aop.interceptor.DemoInterceptor"/>
    
    <!--  也可以使用自动扫描添加 interceptor -->
    <context:component-scan base-package="com.fucheng.aop.interceptor" />
    <aop:aspectj-autoproxy />


    <!-- 生成切面通知的bean -->
    <bean id="demoAdvice" class="com.fucheng.aop.advice.DemoAdvice"></bean>


</beans>